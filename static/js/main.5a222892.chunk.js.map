{"version":3,"sources":["components/Button.js","components/Field.js","components/GeneralInfo.js","components/EducationBlock.js","components/EducationInfo.js","components/ExperienceBlock.js","components/Experience.js","App.js","index.js"],"names":["Button","props","task","label","onClick","Field","field","edit","val","placeholder","callback","charAt","toUpperCase","slice","className","text","value","onChange","e","target","sendData","GeneralInfo","useState","name","setName","email","setEmail","phone","setPhone","updateInfo","key","newInfo","EducationBlock","id","school","major","graduated","update","remove","updateEducation","category","EducationInfo","blockIDs","setBlockIDs","data","setData","createEmptyEducationData","findDataIndex","i","length","updateEducationData","updateIndex","newData","removeEducationBlock","removeIndex","splice","educationInfo","push","collectDataAsElements","ExperienceBlock","title","company","tasks","start","end","updateExperience","Experience","createEmptyExperienceData","updateExperienceData","removeExperienceBlock","experience","App","setEdit","toggleMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a222892.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './style/Button.css'\r\n\r\nconst Button = (props) => {\r\n    const task = props.task\r\n    const label = props.label\r\n    return (\r\n        <button onClick={task}>{label}</button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    task: PropTypes.func,\r\n    label: PropTypes.string\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './style/Field.css'\r\n\r\nconst Field = (props) => {\r\n    const { field, edit, val, placeholder, callback } = props\r\n    const sendData = (e) => {\r\n        callback(field, e.target.value)\r\n    }\r\n    const label = field.charAt(0).toUpperCase() + field.slice(1) + ': '\r\n\r\n    return (\r\n        <div className = 'field-container'>\r\n            <div className = 'label-container'>\r\n                { label }\r\n            </div>\r\n            {edit\r\n            ?   <input\r\n                    className = 'field-edit'\r\n                    text = 'text'\r\n                    placeholder = { placeholder }\r\n                    value = { val }\r\n                    onChange = { (e) => sendData(e) }\r\n                />\r\n            :   <div className = 'field-preview'>{ val }</div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nField.propTypes = {\r\n    field: PropTypes.string,\r\n    cb: PropTypes.func,\r\n    edit: PropTypes.bool,\r\n    placeholder: PropTypes.string\r\n}\r\n\r\nexport default Field","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Field from './Field'\r\nimport './style/GeneralInfo.css'\r\n\r\nconst GeneralInfo = (props) => {\r\n    const { edit } = props\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n\r\n    const updateInfo = (key, newInfo) => {\r\n        switch(key) {\r\n            case 'name':\r\n                setName(newInfo)\r\n                break\r\n            case 'email':\r\n                setEmail(newInfo)\r\n                break\r\n            case 'phone':\r\n                setPhone(newInfo)\r\n                break\r\n            default:\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className = 'general-info'>\r\n            <div className = 'general-name'>\r\n                <Field\r\n                    field = 'name'\r\n                    val = { name }\r\n                    callback = { updateInfo }\r\n                    edit = { edit }\r\n                    placeholder = 'John Smith'\r\n                />\r\n            </div>\r\n            <div className = 'general-email'>\r\n                <Field\r\n                    field = 'email'\r\n                    val = { email }\r\n                    callback = { updateInfo }\r\n                    edit = { edit }\r\n                    placeholder = 'johnsmith@email.com'\r\n                />\r\n            </div>\r\n            <div className = 'general-phone'>\r\n                <Field\r\n                    field = 'phone'\r\n                    val = { phone }\r\n                    callback = { updateInfo }\r\n                    edit = { edit }\r\n                    placeholder = '0123 456 789'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nGeneralInfo.propTypes = {\r\n    edit: PropTypes.bool\r\n}\r\n\r\nexport default GeneralInfo","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Field from './Field'\r\nimport Button from './Button'\r\nimport './style/EducationBlock.css'\r\n\r\nconst EducationBlock = (props) => {\r\n    const { id, school, major, graduated, edit, update, remove } = props\r\n\r\n    const updateEducation = (category, newInfo) => {\r\n        update(id, category, newInfo)\r\n    }\r\n\r\n    const deleteSelf = () => {\r\n        remove(id)\r\n    }\r\n\r\n    return(\r\n        <div className = 'education-block'>\r\n            <div className = 'edu-content'>\r\n                <div className = 'school-wrapper'>\r\n                    <Field\r\n                        field = 'school'\r\n                        val = { school }\r\n                        callback = { updateEducation }\r\n                        edit = { edit }\r\n                        placeholder = 'RMIT Univeristy'\r\n                    />\r\n                </div>\r\n                <div className = 'major-wrapper'>\r\n                    <Field\r\n                        field = 'major'\r\n                        val = { major }\r\n                        callback = { updateEducation }\r\n                        edit = { edit }\r\n                        placeholder = 'Linguistics'\r\n                    />\r\n                </div>\r\n                <div className = 'graduated-wrapper'>\r\n                    <Field\r\n                        field = 'graduated'\r\n                        val = { graduated }\r\n                        callback = { updateEducation }\r\n                        edit = { edit }\r\n                        placeholder = '2012'\r\n                    />\r\n                </div>\r\n            </div>\r\n            {edit &&\r\n                <div className = 'remove-button'>\r\n                    <div className = 'edu-button-wrapper'>\r\n                        <Button task = { deleteSelf } label = 'Remove'/>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nEducationBlock.propTypes = {\r\n    edit: PropTypes.bool,\r\n    delete: PropTypes.func,\r\n    update: PropTypes.func,\r\n    id: PropTypes.number,\r\n    school: PropTypes.string,\r\n    major: PropTypes.string,\r\n    graduated: PropTypes.string\r\n}\r\n\r\nexport default EducationBlock","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button'\r\nimport EducationBlock from './EducationBlock'\r\nimport './style/EducationInfo.css'\r\n\r\nconst EducationInfo = (props) => {\r\n    const { edit } = props\r\n    const [blockIDs, setBlockIDs] = useState(1)\r\n    const [data, setData] = useState([])\r\n\r\n    const newEducationBlock = () => {\r\n        setBlockIDs(blockIDs + 1)\r\n        setData([...data, createEmptyEducationData()])\r\n    }\r\n\r\n    const createEmptyEducationData = () => {\r\n        return {\r\n            id: blockIDs,\r\n            school: '',\r\n            major: '',\r\n            graduated: ''\r\n        }\r\n    }\r\n\r\n    const findDataIndex = (id) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i].id === id) {\r\n                return i\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateEducationData = (id, category, newInfo) => {\r\n        const updateIndex = findDataIndex(id)\r\n        const newData = [ ...data ]\r\n        newData[updateIndex] = {\r\n            ...newData[updateIndex],\r\n            [category]: newInfo\r\n        }\r\n        setData(newData)\r\n    }\r\n\r\n    const removeEducationBlock = (id) => {\r\n        const removeIndex = findDataIndex(id)\r\n        const newData = [ ...data ]\r\n        newData.splice(removeIndex, 1)\r\n        setData(newData)\r\n    }\r\n\r\n    const collectDataAsElements = () => {\r\n        let educationInfo = []\r\n        for (let i = 0; i < data.length; i++) {\r\n            const { id, school, major, graduated } = data[i]\r\n            educationInfo.push(\r\n                <EducationBlock\r\n                    key = { i }\r\n                    edit = { edit }\r\n                    remove = { removeEducationBlock }\r\n                    update = { updateEducationData }\r\n                    id = { id }\r\n                    school = { school }\r\n                    major = { major }\r\n                    graduated = { graduated }                    \r\n                />\r\n            )\r\n        }\r\n        return educationInfo\r\n    }\r\n\r\n    return (\r\n        <div className = 'education-info'>\r\n            {collectDataAsElements()}\r\n            {edit &&\r\n                <div className = 'add-education-wrapper'>\r\n                    <div className = 'add-education'>\r\n                        <Button task = { newEducationBlock } label = 'Add Education'/>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nEducationInfo.propTypes = {\r\n    edit: PropTypes.bool\r\n}\r\n\r\nexport default EducationInfo","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Field from './Field'\r\nimport Button from './Button'\r\nimport './style/ExperienceBlock.css'\r\n\r\nconst ExperienceBlock = (props) => {\r\n    const { id, title, company, tasks, start, end, edit, update, remove } = props\r\n\r\n    const updateExperience = (category, newInfo) => {\r\n        update(id, category, newInfo)\r\n    }\r\n\r\n    const deleteSelf = () => {\r\n        remove(id)\r\n    }\r\n\r\n    return(\r\n        <div className = 'experience-block'>\r\n            <div className = 'exp-content'>\r\n                <div className = 'information-group'>\r\n                    <div className = 'title-wrapper'>\r\n                        <Field\r\n                            field = 'title'\r\n                            val = { title }\r\n                            callback = { updateExperience }\r\n                            edit = { edit }\r\n                            placeholder = 'CEO'\r\n                        />\r\n                    </div>\r\n                    <div className = 'company-wrapper'>\r\n                        <Field\r\n                            field = 'company'\r\n                            val = { company }\r\n                            callback = { updateExperience }\r\n                            edit = { edit }\r\n                            placeholder = 'Amazon'\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className = 'information-group'>\r\n                    <div className = 'start-wrapper'>\r\n                        <Field\r\n                            field = 'start'\r\n                            val = { start }\r\n                            callback = { updateExperience }\r\n                            edit = { edit }\r\n                            placeholder = '2017'\r\n                        />\r\n                    </div>\r\n                    <div className = 'end-wrapper'>\r\n                        <Field\r\n                            field = 'end'\r\n                            val = { end }\r\n                            callback = { updateExperience }\r\n                            edit = { edit }\r\n                            placeholder = '2020'\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className = 'tasks-wrapper'>\r\n                    <Field\r\n                        field = 'tasks'\r\n                        val = { tasks }\r\n                        callback = { updateExperience }\r\n                        edit = { edit }\r\n                        placeholder = 'Swimming in a pool filled with cash'\r\n                    />\r\n                </div>\r\n            </div>\r\n            {edit &&\r\n                <div className = 'exp-remove-button'>\r\n                    <div className = 'exp-button-wrapper'>\r\n                        <Button task = { deleteSelf } label = 'Remove' />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nExperienceBlock.propTypes = {\r\n    edit: PropTypes.bool,\r\n    delete: PropTypes.func,\r\n    update: PropTypes.func,\r\n    id: PropTypes.number,\r\n    school: PropTypes.string,\r\n    major: PropTypes.string,\r\n    graduated: PropTypes.string\r\n}\r\n\r\nexport default ExperienceBlock","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button'\r\nimport ExperienceBlock from './ExperienceBlock'\r\nimport './style/Experience.css'\r\n\r\nconst Experience = (props) => {\r\n    const { edit } = props\r\n    const [blockIDs, setBlockIDs] = useState(1)\r\n    const [data, setData] = useState([])\r\n\r\n    const newExperienceBlock = () => {\r\n        setBlockIDs(blockIDs + 1)\r\n        setData([...data, createEmptyExperienceData()])\r\n    }\r\n\r\n    const createEmptyExperienceData = () => {\r\n        return {\r\n            id: blockIDs,\r\n            title: '',\r\n            company: '',\r\n            tasks: '',\r\n            start: '',\r\n            end: ''\r\n        }\r\n    }\r\n\r\n    const findDataIndex = (id) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i].id === id) {\r\n                return i\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateExperienceData = (id, category, newInfo) => {\r\n        const updateIndex = findDataIndex(id)\r\n        const newData = [ ...data ]\r\n        newData[updateIndex] = {\r\n            ...newData[updateIndex],\r\n            [category]: newInfo\r\n        }\r\n        setData(newData)\r\n    }\r\n\r\n    const removeExperienceBlock = (id) => {\r\n        const removeIndex = findDataIndex(id)\r\n        const newData = [ ...data ]\r\n        newData.splice(removeIndex, 1)\r\n        setData(newData)\r\n    }\r\n\r\n    const collectDataAsElements = () => {\r\n        let experience = []\r\n        for (let i = 0; i < data.length; i++) {\r\n            const { id, title, company, tasks, start, end } = data[i]\r\n            experience.push(\r\n                <ExperienceBlock\r\n                    key = { i }\r\n                    edit = { edit }\r\n                    remove = {removeExperienceBlock}\r\n                    update = {updateExperienceData}\r\n                    id = { id }\r\n                    title = { title }\r\n                    company = { company }\r\n                    tasks = { tasks }\r\n                    start = { start }\r\n                    end = { end }\r\n                />\r\n            )\r\n        }\r\n        return experience\r\n    }\r\n\r\n    return( \r\n        <div className = 'experience'>\r\n            {collectDataAsElements()}\r\n            {edit && \r\n                <div className='add-experience-wrapper'>\r\n                    <div className='add-experience'>\r\n                        <Button task={newExperienceBlock} label='Add Experience' />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nExperience.propTypes = {\r\n    edit: PropTypes.bool\r\n}\r\n\r\nexport default Experience","import './App.css'\nimport React, { useState } from 'react'\nimport Button from './components/Button'\nimport GeneralInfo from './components/GeneralInfo'\nimport EducationInfo from './components/EducationInfo'\nimport Experience from './components/Experience'\n\nconst App = () => {\n\tconst [edit, setEdit] = useState(true)\n\n\tconst toggleMode = () => {\n\t\tsetEdit(!edit)\n\t}\n\n\treturn(\n\t\t<div className = 'App'>\n\t\t\t<div className = 'page-content'>\n\t\t\t\t{edit\n\t\t\t\t?\t<div className = 'toggle-wrapper'>\n\t\t\t\t\t\t<Button task = {toggleMode} label = 'Edit Mode' />\n\t\t\t\t\t</div>\n\t\t\t\t:\t<div className = 'toggle-wrapper'>\n\t\t\t\t\t\t<Button task = {toggleMode} label = 'Preview Mode' />\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t<h3>PERSONAL INFORMATION</h3>\n\t\t\t\t<GeneralInfo edit = { edit } />\n\t\t\t\t<h3>EDUCATION</h3>\n\t\t\t\t<EducationInfo edit = { edit } />\n\t\t\t\t<h3>EXPERIENCE</h3>\n\t\t\t\t<Experience edit = { edit } />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}